import tensorflow as tf
from sklearn.tree import DecisionTreeClassifier
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split

import datetime as dt
dt_clf = DecisionTreeClassifier(random_state=150)

iris_data = load_iris()
X_train , X_test , y_train , y_test = train_test_split(iris_data.data, iris_data. target,
                                                       test_size=0.3, random_state=11)

dt_clf.fit(X_train , y_train) 

from sklearn.tree import export_graphviz
export_graphviz(dt_clf, out_file="tree.dot", class_names=iris_data.target_names , \
feature_names = iris_data.feature_names, impurity=True, filled=True)
import graphviz

with open("tree.dot") as f:
    dot_graph = f.read()
graphviz.Source(dot_graph)

import seaborn as sns
import numpy as np


print("Feature importances:\n".format(np.round(dt_clf.feature_importances_, 3)))

for name, value in zip(iris_data.feature_names , dt_clf.feature_importances_):
    print('{0} : {1:.5f}'.format(name, value))

sns.barplot(y= dt_clf.feature_importances_ , x=iris_data.feature_names)
